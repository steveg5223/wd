{"ast":null,"code":"var _jsxFileName = \"/Library/WebServer/Documents/wd/src/DuJour.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormRow from './FormRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  }\n}));\nexport default function DuJour(props) {\n  _s();\n\n  const classes = useStyles();\n  const isLoggedIn = props.response.isLoggedIn;\n  const {\n    setDateWorn,\n    setRequestedWatchId\n  } = props;\n  const [order, setorder] = React.useState(true);\n\n  const handleChangeOrder = event => {\n    setorder(!order);\n  };\n\n  let numPerRow;\n\n  switch (Math.floor(window.screen.availWidth / 500)) {\n    case 0:\n      numPerRow = 1;\n      break;\n\n    case 1:\n      numPerRow = 2;\n      break;\n\n    case 2:\n      numPerRow = 3;\n      break;\n\n    default:\n      numPerRow = 4;\n      break;\n  }\n\n  const watches = [];\n\n  const sortLastWorn = (a, b) => {\n    const aLastWorn = new Date(a.last_worn);\n    const bLastWorn = new Date(b.last_worn);\n\n    if (aLastWorn > bLastWorn) {\n      return -1;\n    }\n\n    if (aLastWorn < bLastWorn) {\n      return 1;\n    } // a must be equal to b\n\n\n    return 0;\n  };\n\n  const sortNextToWear = (a, b) => {\n    const aLastWorn = new Date(a.last_worn);\n    const bLastWorn = new Date(b.last_worn);\n\n    if (aLastWorn < bLastWorn) {\n      return -1;\n    }\n\n    if (aLastWorn > bLastWorn) {\n      return 1;\n    } // a must be equal to b\n\n\n    return 0;\n  };\n\n  const inpuWatchList = props.response.watchList.sort(order ? sortNextToWear : sortLastWorn).slice();\n\n  while (inpuWatchList.length > numPerRow) {\n    watches.push(inpuWatchList.splice(0, numPerRow));\n  }\n\n  ;\n  watches.push(inpuWatchList.splice(0, numPerRow));\n  let rowKey = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, {\n            checked: order,\n            onChange: handleChangeOrder,\n            name: \"galleryOrder\",\n            inputProps: {\n              'aria-label': 'secondary checkbox'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this),\n          label: order ? 'Wear next' : 'Last worn'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), watches.map(chunk => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          xs: 12,\n          spacing: 3,\n          children: /*#__PURE__*/_jsxDEV(FormRow, {\n            watchlist: chunk,\n            xs: Math.floor(12 / numPerRow),\n            isLoggedIn: isLoggedIn,\n            setDateWorn: setDateWorn,\n            setRequestedWatchId: setRequestedWatchId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 21\n          }, this)\n        }, rowKey++, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n\n_s(DuJour, \"sgPEpjTVEMgrK0UhPfaUsaj8aRU=\", false, function () {\n  return [useStyles];\n});\n\n_c = DuJour;\n\nvar _c;\n\n$RefreshReg$(_c, \"DuJour\");","map":{"version":3,"sources":["/Library/WebServer/Documents/wd/src/DuJour.js"],"names":["React","makeStyles","Grid","Switch","FormControlLabel","FormRow","useStyles","theme","root","flexGrow","DuJour","props","classes","isLoggedIn","response","setDateWorn","setRequestedWatchId","order","setorder","useState","handleChangeOrder","event","numPerRow","Math","floor","window","screen","availWidth","watches","sortLastWorn","a","b","aLastWorn","Date","last_worn","bLastWorn","sortNextToWear","inpuWatchList","watchList","sort","slice","length","push","splice","rowKey","map","chunk"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormRow from './FormRow';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n  }));\n  \n  export default function DuJour(props) {\n    const classes = useStyles();\n    const isLoggedIn = props.response.isLoggedIn;\n    const {setDateWorn, setRequestedWatchId} = props;\n    const [order, setorder] = React.useState(true);\n  \n    const handleChangeOrder = (event) => {\n      setorder(!order);\n    };\n\n    let numPerRow; \n    switch (Math.floor(window.screen.availWidth / 500)) {\n        case 0: numPerRow = 1; break; \n        case 1: numPerRow = 2; break; \n        case 2: numPerRow = 3; break; \n        default: numPerRow = 4; break;  \n    }\n\n    const watches = [];\n    const sortLastWorn = (a, b) => {\n      const aLastWorn = new Date(a.last_worn);\n      const bLastWorn = new Date(b.last_worn);\n      if (aLastWorn > bLastWorn) {\n        return -1;\n      }\n      if (aLastWorn < bLastWorn) {\n        return 1;\n      }\n      // a must be equal to b\n      return 0;\n    };\n    const sortNextToWear = (a, b) => {\n      const aLastWorn = new Date(a.last_worn);\n      const bLastWorn = new Date(b.last_worn);\n      if (aLastWorn < bLastWorn) {\n        return -1;\n      }\n      if (aLastWorn > bLastWorn) {\n        return 1;\n      }\n      // a must be equal to b\n      return 0;\n    };\n    const inpuWatchList = props.response.watchList.sort(order ? sortNextToWear : sortLastWorn).slice();\n    while (inpuWatchList.length > numPerRow) {\n      watches.push(inpuWatchList.splice(0,numPerRow));\n    };\n    watches.push(inpuWatchList.splice(0,numPerRow));\n  \n    let rowKey = 0;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <div>\n          <FormControlLabel\n            control={\n              <Switch\n              checked={order}\n              onChange={handleChangeOrder}\n              name=\"galleryOrder\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n          }\n            label={order ? 'Wear next' : 'Last worn'}\n          />\n          </div>\n            {watches.map((chunk) => {\n                return (\n                  <Grid container item xs={12} spacing={3} key={rowKey++}>\n                    <FormRow \n                      watchlist={chunk} \n                      xs={Math.floor(12 / numPerRow)} \n                      isLoggedIn={isLoggedIn}\n                      setDateWorn={setDateWorn}\n                      setRequestedWatchId={setRequestedWatchId}\n                    />\n                </Grid>\n                );\n            })}\n        </Grid>\n      </div>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}