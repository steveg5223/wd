{"ast":null,"code":"import _slicedToArray from\"/Library/WebServer/Documents/wd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import DuJour from'./DuJour';import WatchDetails from'./WatchDetails';import{jsx as _jsx}from\"react/jsx-runtime\";export default function DuJourWrapper(props){var initialWatchList={watchList:[]};var initialWatchDetails={photos:[],observations:[]};var setDateWorn=props.setDateWorn,requestedWatchId=props.requestedWatchId,setRequestedWatchId=props.setRequestedWatchId,updatedDate=props.updatedDate;var _useState=useState(initialWatchList),_useState2=_slicedToArray(_useState,2),activeWatchList=_useState2[0],setActiveWatchList=_useState2[1];var _useState3=useState(initialWatchDetails),_useState4=_slicedToArray(_useState3,2),activeWatchDetails=_useState4[0],setActiveWatchDetails=_useState4[1];useEffect(function(){var url=\"/collection/phpsrc/getActive.php\";if(requestedWatchId===null){fetch(url).then(function(response){return response.json();}).then(function(data){setActiveWatchList(data);setActiveWatchDetails({photos:[],observations:[]});});}},[requestedWatchId,updatedDate]);useEffect(function(){var url=\"/collection/phpsrc/getWatchDetails.php?watchId=\".concat(requestedWatchId);if(requestedWatchId!==null){fetch(url).then(function(response){return response.json();}).then(function(data){setActiveWatchDetails(data);});}},[requestedWatchId,updatedDate]);return requestedWatchId===null?/*#__PURE__*/_jsx(DuJour,{response:activeWatchList,setDateWorn:setDateWorn,setRequestedWatchId:setRequestedWatchId}):/*#__PURE__*/_jsx(WatchDetails,{response:activeWatchDetails,setDateWorn:setDateWorn,setRequestedWatchId:setRequestedWatchId});}","map":{"version":3,"sources":["/Library/WebServer/Documents/wd/src/DuJourWrapper.js"],"names":["React","useState","useEffect","DuJour","WatchDetails","DuJourWrapper","props","initialWatchList","watchList","initialWatchDetails","photos","observations","setDateWorn","requestedWatchId","setRequestedWatchId","updatedDate","activeWatchList","setActiveWatchList","activeWatchDetails","setActiveWatchDetails","url","fetch","then","response","json","data"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,C,2CAEA,cAAe,SAASC,CAAAA,aAAT,CAAuBC,KAAvB,CAA8B,CACzC,GAAMC,CAAAA,gBAAgB,CAAG,CAACC,SAAS,CAAE,EAAZ,CAAzB,CACA,GAAMC,CAAAA,mBAAmB,CAAG,CAACC,MAAM,CAAE,EAAT,CAAaC,YAAY,CAAE,EAA3B,CAA5B,CACA,GAAOC,CAAAA,WAAP,CAA0EN,KAA1E,CAAOM,WAAP,CAAoBC,gBAApB,CAA0EP,KAA1E,CAAoBO,gBAApB,CAAsCC,mBAAtC,CAA0ER,KAA1E,CAAsCQ,mBAAtC,CAA2DC,WAA3D,CAA0ET,KAA1E,CAA2DS,WAA3D,CACA,cAA8Cd,QAAQ,CAACM,gBAAD,CAAtD,wCAAOS,eAAP,eAAwBC,kBAAxB,eACA,eAAoDhB,QAAQ,CAACQ,mBAAD,CAA5D,yCAAOS,kBAAP,eAA2BC,qBAA3B,eAEAjB,SAAS,CAAC,UAAM,CACd,GAAMkB,CAAAA,GAAG,mCAAT,CACA,GAAIP,gBAAgB,GAAK,IAAzB,CAA+B,CAC7BQ,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,SAACC,QAAD,CAAc,CAAE,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CAAyB,CADjD,EAEGF,IAFH,CAEQ,SAACG,IAAD,CAAU,CACdR,kBAAkB,CAACQ,IAAD,CAAlB,CACAN,qBAAqB,CAAC,CAACT,MAAM,CAAE,EAAT,CAAaC,YAAY,CAAE,EAA3B,CAAD,CAArB,CACD,CALH,EAMD,CACF,CAVQ,CAUN,CAACE,gBAAD,CAAmBE,WAAnB,CAVM,CAAT,CAYAb,SAAS,CAAE,UAAM,CACf,GAAMkB,CAAAA,GAAG,0DAAqDP,gBAArD,CAAT,CACA,GAAIA,gBAAgB,GAAK,IAAzB,CAA+B,CAC7BQ,KAAK,CAACD,GAAD,CAAL,CACCE,IADD,CACM,SAACC,QAAD,CAAc,CAAE,MAAOA,CAAAA,QAAQ,CAACC,IAAT,EAAP,CAAyB,CAD/C,EAECF,IAFD,CAEM,SAACG,IAAD,CAAU,CACdN,qBAAqB,CAACM,IAAD,CAArB,CACD,CAJD,EAKD,CACF,CATQ,CASN,CAACZ,gBAAD,CAAmBE,WAAnB,CATM,CAAT,CAWA,MAAOF,CAAAA,gBAAgB,GAAK,IAArB,cACL,KAAC,MAAD,EACA,QAAQ,CAAEG,eADV,CAEA,WAAW,CAAEJ,WAFb,CAGA,mBAAmB,CAAEE,mBAHrB,EADK,cAOL,KAAC,YAAD,EACA,QAAQ,CAAEI,kBADV,CAEA,WAAW,CAAEN,WAFb,CAGA,mBAAmB,CAAEE,mBAHrB,EAPF,CAaH","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DuJour from './DuJour';\nimport WatchDetails from './WatchDetails'\n\nexport default function DuJourWrapper(props) {\n    const initialWatchList = {watchList: []};\n    const initialWatchDetails = {photos: [], observations: []}\n    const {setDateWorn, requestedWatchId, setRequestedWatchId, updatedDate} = props;\n    const [activeWatchList, setActiveWatchList] = useState(initialWatchList);\n    const [activeWatchDetails, setActiveWatchDetails] = useState(initialWatchDetails);\n\n    useEffect(() => {\n      const url = `/collection/phpsrc/getActive.php`;\n      if (requestedWatchId === null) {\n        fetch(url)\n          .then((response) => { return response.json(); })\n          .then((data) => {\n            setActiveWatchList(data);\n            setActiveWatchDetails({photos: [], observations: []});\n          })\n      }\n    }, [requestedWatchId, updatedDate]);\n\n    useEffect( () => {\n      const url = `/collection/phpsrc/getWatchDetails.php?watchId=${requestedWatchId}`;\n      if (requestedWatchId !== null) {\n        fetch(url)\n        .then((response) => { return response.json(); })\n        .then((data) => {\n          setActiveWatchDetails(data);\n        })\n      }\n    }, [requestedWatchId, updatedDate]);\n\n    return requestedWatchId === null ? (\n      <DuJour \n      response={activeWatchList} \n      setDateWorn={setDateWorn} \n      setRequestedWatchId={setRequestedWatchId}\n      />\n    ) : (\n      <WatchDetails \n      response={activeWatchDetails} \n      setDateWorn={setDateWorn} \n      setRequestedWatchId={setRequestedWatchId}\n      />\n    )\n}"]},"metadata":{},"sourceType":"module"}