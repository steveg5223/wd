{"ast":null,"code":"import _slicedToArray from\"/Library/WebServer/Documents/wd/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import{makeStyles}from'@material-ui/core/styles';import Grid from'@material-ui/core/Grid';import Switch from'@material-ui/core/Switch';import FormControlLabel from'@material-ui/core/FormControlLabel';import FormRow from'./FormRow';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{root:{flexGrow:1}};});export default function DuJour(props){var classes=useStyles();var isLoggedIn=props.response.isLoggedIn;var setDateWorn=props.setDateWorn,setRequestedWatchId=props.setRequestedWatchId;var _React$useState=React.useState(true),_React$useState2=_slicedToArray(_React$useState,2),order=_React$useState2[0],setorder=_React$useState2[1];var handleChangeOrder=function handleChangeOrder(event){setorder(!order);};var numPerRow;switch(Math.floor(window.screen.availWidth/500)){case 0:numPerRow=1;break;case 1:numPerRow=2;break;case 2:numPerRow=3;break;default:numPerRow=4;break;}var watches=[];var sortLastWorn=function sortLastWorn(a,b){var aLastWorn=new Date(a.last_worn);var bLastWorn=new Date(b.last_worn);if(aLastWorn>bLastWorn){return-1;}if(aLastWorn<bLastWorn){return 1;}// a must be equal to b\nreturn 0;};var sortNextToWear=function sortNextToWear(a,b){var aLastWorn=new Date(a.last_worn);var bLastWorn=new Date(b.last_worn);if(aLastWorn<bLastWorn){return-1;}if(aLastWorn>bLastWorn){return 1;}// a must be equal to b\nreturn 0;};var inpuWatchList=props.response.watchList.sort(order?sortNextToWear:sortLastWorn).slice();while(inpuWatchList.length>numPerRow){watches.push(inpuWatchList.splice(0,numPerRow));};watches.push(inpuWatchList.splice(0,numPerRow));var rowKey=0;return/*#__PURE__*/_jsx(\"div\",{className:classes.root,children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:1,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Switch,{checked:order,onChange:handleChangeOrder,name:\"galleryOrder\",inputProps:{'aria-label':'secondary checkbox'}}),label:order?'Wear next':'Last worn'})}),watches.map(function(chunk){return/*#__PURE__*/_jsx(Grid,{container:true,item:true,xs:12,spacing:3,children:/*#__PURE__*/_jsx(FormRow,{watchlist:chunk,xs:Math.floor(12/numPerRow),isLoggedIn:isLoggedIn,setDateWorn:setDateWorn,setRequestedWatchId:setRequestedWatchId})},rowKey++);})]})});}","map":{"version":3,"sources":["/Library/WebServer/Documents/wd/src/DuJour.js"],"names":["React","makeStyles","Grid","Switch","FormControlLabel","FormRow","useStyles","theme","root","flexGrow","DuJour","props","classes","isLoggedIn","response","setDateWorn","setRequestedWatchId","useState","order","setorder","handleChangeOrder","event","numPerRow","Math","floor","window","screen","availWidth","watches","sortLastWorn","a","b","aLastWorn","Date","last_worn","bLastWorn","sortNextToWear","inpuWatchList","watchList","sort","slice","length","push","splice","rowKey","map","chunk"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormRow from './FormRow';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n  }));\n  \n  export default function DuJour(props) {\n    const classes = useStyles();\n    const isLoggedIn = props.response.isLoggedIn;\n    const {setDateWorn, setRequestedWatchId} = props;\n    const [order, setorder] = React.useState(true);\n  \n    const handleChangeOrder = (event) => {\n      setorder(!order);\n    };\n\n    let numPerRow; \n    switch (Math.floor(window.screen.availWidth / 500)) {\n        case 0: numPerRow = 1; break; \n        case 1: numPerRow = 2; break; \n        case 2: numPerRow = 3; break; \n        default: numPerRow = 4; break;  \n    }\n\n    const watches = [];\n    const sortLastWorn = (a, b) => {\n      const aLastWorn = new Date(a.last_worn);\n      const bLastWorn = new Date(b.last_worn);\n      if (aLastWorn > bLastWorn) {\n        return -1;\n      }\n      if (aLastWorn < bLastWorn) {\n        return 1;\n      }\n      // a must be equal to b\n      return 0;\n    };\n    const sortNextToWear = (a, b) => {\n      const aLastWorn = new Date(a.last_worn);\n      const bLastWorn = new Date(b.last_worn);\n      if (aLastWorn < bLastWorn) {\n        return -1;\n      }\n      if (aLastWorn > bLastWorn) {\n        return 1;\n      }\n      // a must be equal to b\n      return 0;\n    };\n    const inpuWatchList = props.response.watchList.sort(order ? sortNextToWear : sortLastWorn).slice();\n    while (inpuWatchList.length > numPerRow) {\n      watches.push(inpuWatchList.splice(0,numPerRow));\n    };\n    watches.push(inpuWatchList.splice(0,numPerRow));\n  \n    let rowKey = 0;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1}>\n          <div>\n          <FormControlLabel\n            control={\n              <Switch\n              checked={order}\n              onChange={handleChangeOrder}\n              name=\"galleryOrder\"\n              inputProps={{ 'aria-label': 'secondary checkbox' }}\n            />\n          }\n            label={order ? 'Wear next' : 'Last worn'}\n          />\n          </div>\n            {watches.map((chunk) => {\n                return (\n                  <Grid container item xs={12} spacing={3} key={rowKey++}>\n                    <FormRow \n                      watchlist={chunk} \n                      xs={Math.floor(12 / numPerRow)} \n                      isLoggedIn={isLoggedIn}\n                      setDateWorn={setDateWorn}\n                      setRequestedWatchId={setRequestedWatchId}\n                    />\n                </Grid>\n                );\n            })}\n        </Grid>\n      </div>\n    );\n  }\n  "]},"metadata":{},"sourceType":"module"}