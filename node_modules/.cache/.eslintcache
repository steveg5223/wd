[{"/Users/sgoodwin/wd/src/index.js":"1","/Users/sgoodwin/wd/src/App.js":"2","/Users/sgoodwin/wd/src/reportWebVitals.js":"3","/Users/sgoodwin/wd/src/About.js":"4","/Users/sgoodwin/wd/src/CollectionWrapper.js":"5","/Users/sgoodwin/wd/src/DuJourWrapper.js":"6","/Users/sgoodwin/wd/src/Collection.js":"7","/Users/sgoodwin/wd/src/WatchDetails.js":"8","/Users/sgoodwin/wd/src/DuJour.js":"9","/Users/sgoodwin/wd/src/FormRow.js":"10"},{"size":500,"mtime":1748624775800,"results":"11","hashOfConfig":"12"},{"size":4155,"mtime":1750280373816,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1748624775800,"results":"14","hashOfConfig":"12"},{"size":5839,"mtime":1748624775799,"results":"15","hashOfConfig":"12"},{"size":1995,"mtime":1750280271098,"results":"16","hashOfConfig":"12"},{"size":1918,"mtime":1750280287458,"results":"17","hashOfConfig":"12"},{"size":2923,"mtime":1750282063953,"results":"18","hashOfConfig":"12"},{"size":7207,"mtime":1748624775800,"results":"19","hashOfConfig":"12"},{"size":4174,"mtime":1750282073833,"results":"20","hashOfConfig":"12"},{"size":3969,"mtime":1748624775800,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13t9rbf",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/sgoodwin/wd/src/index.js",[],"/Users/sgoodwin/wd/src/App.js",[],"/Users/sgoodwin/wd/src/reportWebVitals.js",[],"/Users/sgoodwin/wd/src/About.js",[],"/Users/sgoodwin/wd/src/CollectionWrapper.js",[],"/Users/sgoodwin/wd/src/DuJourWrapper.js",[],"/Users/sgoodwin/wd/src/Collection.js",["44"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport FormRow from './FormRow';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n  }));\n  \n  export default function Collection(props) {\n    const classes = useStyles();\n    let numPerRow;\n    const setDateWorn = props.setDateWorn;\n    const setRequestedWatchId = props.setRequestedWatchId;\n    const isLoggedIn = props.response.isLoggedIn;\n    const { makes = [], selectedMake = 'All', handleMakeChange } = props;\n    const watches = [];\n    const inpuWatchList = props.response.watchList.slice();\n\n    switch (Math.floor(window.screen.availWidth / 500)) {\n        case 0: numPerRow = 1; break; \n        case 1: numPerRow = 2; break; \n        case 2: numPerRow = 3; break; \n        default: numPerRow = 4; break;  \n    }\n\n    while (inpuWatchList.length > numPerRow) {\n      watches.push(inpuWatchList.splice(0,numPerRow));\n    };\n    watches.push(inpuWatchList.splice(0,numPerRow));\n  \n    let rowKey = 0;\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1} alignItems=\"center\">\n          <Grid item xs={12}>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Typography variant=\"body1\" component=\"label\" htmlFor=\"make-select\" style={{paddingLeft: 8, paddingBottom: 0, marginRight: 8}}>\n                Make\n              </Typography>\n              <FormControl style={{ minWidth: 200, margin: 0 }}>\n                <Select\n                  id=\"make-select\"\n                  value={selectedMake}\n                  onChange={handleMakeChange}\n                  style={{fontSize: '1rem'}}\n                >\n                  <MenuItem value=\"All\"><Typography variant=\"body1\">All</Typography></MenuItem>\n                  {makes.map((make) => (\n                    <MenuItem key={make} value={make}><Typography variant=\"body1\">{make}</Typography></MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n            </div>\n          </Grid>\n          <Grid item xs={12} />\n          {watches.map((chunk) => {\n              return (\n                  <Grid container item xs={12} spacing={3} key={rowKey++}>\n                  <FormRow \n                    watchlist={chunk} \n                    xs={Math.floor(12 / numPerRow)}\n                    isLoggedIn={isLoggedIn}\n                    setDateWorn={setDateWorn}\n                    setRequestedWatchId={setRequestedWatchId}\n                    />\n                </Grid>\n                );\n          })}\n        </Grid>\n      </div>\n    );\n  }\n  ","/Users/sgoodwin/wd/src/WatchDetails.js",[],"/Users/sgoodwin/wd/src/DuJour.js",["45"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormRow from './FormRow';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n    },\n  }));\n  \n  export default function DuJour(props) {\n    const classes = useStyles();\n    const isLoggedIn = props.response.isLoggedIn;\n    const {setDateWorn, setRequestedWatchId, makes = [], selectedMake = 'All', handleMakeChange} = props;\n    const [order, setorder] = React.useState(true);\n  \n    const handleChangeOrder = (event) => {\n      setorder(!order);\n    };\n\n    let numPerRow; \n    switch (Math.floor(window.screen.availWidth / 500)) {\n        case 0: numPerRow = 1; break; \n        case 1: numPerRow = 2; break; \n        case 2: numPerRow = 3; break; \n        default: numPerRow = 4; break;  \n    }\n\n    const watches = [];\n    const sortLastWorn = (a, b) => {\n      const aLastWorn = new Date(a.last_worn);\n      const bLastWorn = new Date(b.last_worn);\n      if (aLastWorn > bLastWorn) {\n        return -1;\n      }\n      if (aLastWorn < bLastWorn) {\n        return 1;\n      }\n      // a must be equal to b\n      return 0;\n    };\n    const sortNextToWear = (a, b) => {\n      const aLastWorn = new Date(a.last_worn);\n      const bLastWorn = new Date(b.last_worn);\n      if (aLastWorn < bLastWorn) {\n        return -1;\n      }\n      if (aLastWorn > bLastWorn) {\n        return 1;\n      }\n      // a must be equal to b\n      return 0;\n    };\n    const inpuWatchList = props.response.watchList.sort(order ? sortNextToWear : sortLastWorn).slice();\n    while (inpuWatchList.length > numPerRow) {\n      watches.push(inpuWatchList.splice(0,numPerRow));\n    };\n    watches.push(inpuWatchList.splice(0,numPerRow));\n  \n    let rowKey = 0;\n\n    return (\n      <div className={classes.root}>\n        <Grid container spacing={1} alignItems=\"center\">\n          <Grid item xs={12}>\n            <div style={{ display: 'flex', alignItems: 'center' }}>\n              <Typography variant=\"body1\" component=\"label\" htmlFor=\"make-select\" style={{paddingLeft: 8, paddingBottom: 0, marginRight: 8}}>\n                Make\n              </Typography>\n              <FormControl style={{ minWidth: 200, margin: 0 }}>\n                <Select\n                  id=\"make-select\"\n                  value={selectedMake}\n                  onChange={handleMakeChange}\n                  style={{fontSize: '1rem'}}\n                >\n                  <MenuItem value=\"All\"><Typography variant=\"body1\">All</Typography></MenuItem>\n                  {makes.map((make) => (\n                    <MenuItem key={make} value={make}><Typography variant=\"body1\">{make}</Typography></MenuItem>\n                  ))}\n                </Select>\n              </FormControl>\n              <FormControlLabel\n                control={\n                  <Switch\n                  checked={order}\n                  onChange={handleChangeOrder}\n                  name=\"galleryOrder\"\n                  inputProps={{ 'aria-label': 'secondary checkbox' }}\n                />\n              }\n                label={order ? 'Wear next' : 'Last worn'}\n                style={{ marginLeft: 24 }}\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} />\n          {watches.map((chunk) => {\n              return (\n                <Grid container item xs={12} spacing={3} key={rowKey++}>\n                  <FormRow \n                    watchlist={chunk} \n                    xs={Math.floor(12 / numPerRow)} \n                    isLoggedIn={isLoggedIn}\n                    setDateWorn={setDateWorn}\n                    setRequestedWatchId={setRequestedWatchId}\n                  />\n              </Grid>\n              );\n          })}\n        </Grid>\n      </div>\n    );\n  }\n  ","/Users/sgoodwin/wd/src/FormRow.js",[],{"ruleId":"46","severity":1,"message":"47","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":18},{"ruleId":"46","severity":1,"message":"47","line":8,"column":8,"nodeType":"48","messageId":"49","endLine":8,"endColumn":18},"no-unused-vars","'InputLabel' is defined but never used.","Identifier","unusedVar"]